@page "/student/schedule"
@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<Data.Database.Context> DbFactory
@layout Components.Layout.MainLayout
@rendermode InteractiveServer
<style>
	table {
		width: 600px;
		border-spacing: 0;
	}

	.container {
		width: 600px;
	}
</style>
<div>
	@if (!loading)
	{
		<div class="container h-50 py-10">
			<label for="monday">Понедельник</label>
			<table class="table table-striped" name="monday">
				<thead>
					<tr>
						<th scope="col">Порядок</th>
						<th scope="col">Предмет</th>
					</tr>
				</thead>
				<tbody>
					@foreach (Data.Database.Model.Schedule schedule in schedules.Where(x => x.Grade.name == 7 && x.Grade.subname == "Б" && x.weekday == "Понедельник"))
					{
						<tr>
							<th scope ="row">@n</th>
							<td>@schedule.Subject.name</td>
						</tr>
						{ n++; }
					}
				</tbody>
			</table>
			<label for="tuesday">Вторник</label>
			<table class="table table-striped" name="tuesday">
				<thead>
					<tr>
						<th scope="col">Порядок</th>
						<th scope="col">Предмет</th>
					</tr>
				</thead>
				<tbody>
					@{
						n = 1;
					}
					@foreach (Data.Database.Model.Schedule schedule in schedules.Where(x => x.Grade.name == 7 && x.Grade.subname == "Б" && x.weekday == "Вторник"))
					{
						<tr>
							<th scope="row">@n</th>
							<td>@schedule.Subject.name</td>
						</tr>
						{ n++; }
					}
				</tbody>
			</table>
			<label for="wednesday">Среда</label>
			<table class="table table-striped" name="wednesday">
				<thead>
					<tr>
						<th scope="col">Порядок</th>
						<th scope="col">Предмет</th>
					</tr>
				</thead>
				<tbody>
					@{n = 1;
					}
					@foreach (Data.Database.Model.Schedule schedule in schedules.Where(x => x.Grade.name == 7 && x.Grade.subname == "Б" && x.weekday == "Среда"))
					{
						<tr>
							<th scope="row">@n</th>
							<td>@schedule.Subject.name</td>
						</tr>
						{ n++; }
					}
				</tbody>
			</table>
			<label for="thursday">Четверг</label>
			<table class="table table-striped" name="thursday">
				<thead>
					<tr>
						<th scope="col">Порядок</th>
						<th scope="col">Предмет</th>
					</tr>
				</thead>
				<tbody>
					@{
						n = 1;
					}
					@foreach (Data.Database.Model.Schedule schedule in schedules.Where(x => x.Grade.name == 7 && x.Grade.subname == "Б" && x.weekday == "Четверг"))
					{
						<tr>
							<th scope="row">@n</th>
							<td>@schedule.Subject.name</td>
						</tr>
						{ n++; }
					}
				</tbody>
			</table>
			<label for="friday">Пятница</label>
			<table class="table table-striped" name="friday">
				<thead>
					<tr>
						<th scope="col">Порядок</th>
						<th scope="col">Предмет</th>
					</tr>
				</thead>
				<tbody>
					@{
						n = 1;
					}
					@foreach (Data.Database.Model.Schedule schedule in schedules.Where(x => x.Grade.name == 7 && x.Grade.subname == "Б" && x.weekday == "Пятница"))
					{
						<tr>
							<th scope="row">@n</th>
							<td>@schedule.Subject.name</td>
						</tr>
						{ n++; }
					}
				</tbody>
			</table>
		</div>
	}
</div>

@code {
	private int n = 1;

	private bool loading = true;

	private List<Data.Database.Model.Schedule> schedules;

	private async Task LoadSchedules()
	{
		using (var db = DbFactory.CreateDbContext())
		{
			loading = true;
			schedules = await db.Schedules.Include(x => x.Teacher).Include(x => x.Grade).Include(x => x.Subject).ToListAsync();			
		}
		loading = false;
	}

	protected override async Task OnInitializedAsync()
	{
		await LoadSchedules();
	}
}
